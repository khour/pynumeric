#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys

def find_path(capacity, path, source, sink, flow):
    """Находит увеличивающий путь"""
    if source == sink:
        return flow

    path[source] = True
    for i, v in enumerate(path):
        if not v and capacity[source][i] > 0:
            df = find_path(capacity,
                           path,
                           i,
                           sink,
                           min(flow, capacity[source][i]))
            if df > 0:
                capacity[source][i] -= df
                capacity[i][source] += df
                return df
    return 0


def max_flow(capacity, source, sink):
    """Находит максимальный поток методом Форда-Фалкерсона"""
    flow = 0
    iteration_count = 1
    while True:
        path = [False for i in xrange(len(capacity))]
        df = find_path(capacity, path, source, sink, sys.maxint)
        flow += df
        if df == 0:
            return flow, iteration_count
        iteration_count += 1


import sys
stdout = sys.stdout

f = open('FordFulkerson.txt', 'w+')

def test(msg, capacity):
    sys.stdout = f
    print '\n', msg,
    sys.stdout = stdout
    flow, iteration_count = max_flow(capacity, 0, len(capacity) - 1)
    sys.stdout = f
    print ':', iteration_count, 'iterations'
    print 'Max flow = ', flow
    sys.stdout = stdout


# вариант 1
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, t]
    [0, 3, 2, 1, 0, 6, 0, 0], # s
    [0, 0, 0, 1, 2, 0, 0, 0], # 1
    [0, 0, 0, 1, 2, 4, 0, 0], # 2
    [0, 0, 0, 0, 7, 5, 4, 1], # 3
    [0, 0, 0, 0, 0, 0, 3, 2], # 4
    [0, 0, 0, 0, 0, 0, 0, 4], # 5
    [0, 0, 0, 0, 0, 3, 0, 5], # 6
    [0, 0, 0, 0, 0, 0, 0, 0], # t
]

test('1', capacity)

# вариант 2, в методичке правильный поток, но неправильно посчитан
# там v = 12, должно быть v = 13
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, 7, t]
    [0, 4, 1, 0, 1, 5, 2, 0, 0], # s
    [0, 0, 0, 1, 0, 6, 0, 0, 0], # 1
    [0, 0, 0, 0, 2, 0, 0, 0, 0], # 2
    [0, 0, 6, 0, 0, 0, 3, 0, 0], # 3
    [0, 0, 0, 0, 0, 4, 0, 3, 0], # 4
    [0, 0, 0, 0, 0, 0, 1, 3, 6], # 5
    [0, 0, 0, 0, 0, 0, 0, 4, 5], # 6
    [0, 0, 0, 0, 0, 0, 0, 0, 4], # 7
    [0, 0, 0, 0, 0, 0, 0, 0, 0], # t
]

test('2', capacity)

# вариант 3
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, 7, 8, t]
    [0, 2, 1, 0, 2, 0, 0, 0, 0, 0], # s
    [0, 0, 0, 2, 1, 0, 0, 0, 0, 0], # 1
    [0, 0, 0, 0, 3, 2, 0, 0, 0, 0], # 2
    [0, 0, 0, 0, 0, 0, 1, 2, 0, 0], # 3
    [0, 0, 0, 0, 0, 1, 4, 3, 3, 0], # 4
    [0, 0, 0, 0, 0, 0, 0, 2, 2, 0], # 5
    [0, 0, 0, 0, 0, 0, 0, 5, 0, 3], # 6
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 4], # 7
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], # 8
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # t
]

test('3', capacity)

# вариант 4
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, t]
    [0, 3, 6, 3, 2, 0, 0, 0], # s
    [0, 0, 4, 1, 4, 0, 0, 0], # 1
    [0, 0, 0, 0, 0, 0, 3, 2], # 2
    [0, 0, 1, 0, 5, 0, 1, 2], # 3
    [0, 0, 0, 0, 0, 1, 0, 0], # 4
    [0, 0, 0, 3, 0, 0, 1, 0], # 5
    [0, 0, 0, 0, 0, 0, 0, 4], # 6
    [0, 0, 0, 0, 0, 0, 0, 0], # t
]

test('4', capacity)

# вариант 5
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, 7, t]
    [0, 2, 0, 5, 0, 3, 0, 0, 0], # s
    [0, 0, 0, 0, 0, 0, 0, 0, 0], # 1
    [0, 4, 0, 0, 1, 0, 0, 3, 1], # 2
    [0, 0, 2, 0, 2, 4, 5, 0, 0], # 3
    [0, 4, 0, 0, 0, 4, 0, 0, 5], # 4
    [0, 0, 0, 0, 0, 0, 1, 0, 0], # 5
    [0, 0, 0, 0, 1, 0, 0, 4, 0], # 6
    [0, 0, 0, 0, 3, 0, 0, 0, 0], # 7
    [0, 0, 0, 0, 0, 0, 0, 0, 0], # t
]

test('5', capacity)

# вариант 6
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, t]
    [0, 0, 0, 3, 6, 0, 0, 0], # s
    [1, 0, 0, 4, 7, 0, 1, 0], # 1
    [5, 5, 0, 0, 0, 0, 0, 0], # 2
    [0, 0, 1, 0, 2, 2, 1, 3], # 3
    [0, 0, 0, 0, 0, 4, 3, 0], # 4
    [0, 0, 5, 0, 0, 0, 0, 2], # 5
    [0, 0, 0, 0, 0, 7, 0, 0], # 6
    [0, 0, 4, 0, 0, 0, 0, 0], # t
]

test('6', capacity)

# вариант 7
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, 7, t]
    [0, 0, 0, 0, 4, 6, 2, 0, 0], # s
    [3, 0, 2, 0, 7, 0, 4, 0, 0], # 1
    [0, 0, 0, 0, 0, 0, 0, 0, 0], # 2
    [0, 3, 5, 0, 2, 0, 4, 0, 2], # 3
    [0, 0, 0, 0, 0, 1, 0, 0, 0], # 4
    [0, 0, 0, 0, 0, 0, 0, 0, 7], # 5
    [0, 0, 0, 0, 0, 1, 0, 0, 0], # 6
    [0, 0, 3, 6, 0, 0, 4, 0, 1], # 7
    [0, 0, 1, 0, 0, 0, 0, 0, 0], # t
]

test('7', capacity)

# вариант 8
capacity = [
#   [s, 1, 2, 3, 4, 5, 6, 7, 8, t]
    [0, 3, 3, 0, 0, 2, 1, 0, 0, 0], # s
    [0, 0, 6, 0, 0, 0, 0, 0, 0, 0], # 1
    [0, 0, 0, 1, 2, 4, 4, 0, 0, 0], # 2
    [0, 0, 0, 0, 7, 0, 0, 0, 0, 4], # 3
    [0, 0, 0, 0, 0, 0, 1, 0, 1, 1], # 4
    [0, 0, 0, 4, 7, 0, 0, 0, 0, 0], # 5
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 3], # 6
    [2, 4, 0, 0, 0, 5, 6, 0, 2, 0], # 7
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 5], # 8
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # t
]

test('8', capacity)

f.close()